{"version":3,"sources":["components/Logo.tsx","components/HomePage.tsx","utils/index.ts","components/AddLocation.tsx","components/PatientTable.tsx","components/CasesList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","className","style","color","padding","Content","Layout","Footer","Sider","HomePage","children","height","breakpoint","theme","mode","defaultSelectedKeys","Item","icon","EnvironmentOutlined","to","UserOutlined","margin","minHeight","textAlign","title","dataIndex","key","Search","Input","Meta","Card","AddLocation","useState","options","setOptions","selected","setSelected","loading","setLoading","placeholder","allowClear","enterButton","size","marginBottom","onSearch","query","a","axios","get","then","res","data","catch","err","notification","message","description","response","Group","onChange","e","target","value","width","map","idx","name","address","x_coord","y_coord","avatar","type","onClick","post","JSON","stringify","columns","PatientTable","patients","setPatients","error","setError","useEffect","patientList","fetchPatientList","dataSource","CasesList","cases","setCases","casesList","fetchCasesList","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e81da94.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Logo = () => (\n  <h2 className=\"logo\" style={{ color: \"white\", padding: 20 }}>\n    HotZüéØne\n  </h2>\n);\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { EnvironmentOutlined, UserOutlined } from \"@ant-design/icons\";\n\nimport { Logo } from \"./Logo\";\nimport { Link } from \"react-router-dom\";\n\nconst { Content, Footer, Sider } = Layout;\n\ninterface HomePageProps {\n  children: React.ReactNode;\n}\n\nexport const HomePage: React.FC<HomePageProps> = ({ children }) => (\n  <Layout style={{ height: \"100%\" }}>\n    <Sider breakpoint=\"lg\">\n      <Logo />\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n          <Menu.Item key=\"1\" icon={<EnvironmentOutlined />}>\n            <Link to=\"/\">\n              Locations\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\n            <Link to=\"/cases\">\n              Cases\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<UserOutlined />}>\n            <Link to=\"/patients\">\n              Patients\n            </Link>\n          </Menu.Item>\n      </Menu>\n    </Sider>\n    <Layout>\n      <Content style={{ margin: \"24px 16px 0\" }}>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 360 }}\n        >\n          {children}\n        </div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>Made with ‚ô•Ô∏è</Footer>\n    </Layout>\n  </Layout>\n);\n","export const locationColumns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"X Co-ordinate\",\n    dataIndex: \"x_coord\",\n    key: \"x_coord\",\n  },\n  {\n    title: \"Y Co-ordinate\",\n    dataIndex: \"y_coord\",\n    key: \"y_coord\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n];\n\nexport const locationListColumns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  ...locationColumns,\n];\n","import React, { useState } from \"react\";\nimport { Button, Card, Input, Radio, notification } from \"antd\";\nimport axios from \"axios\";\n\nimport { LocationType } from \"../interfaces\";\n\nconst { Search } = Input;\nconst { Meta } = Card;\n\nexport const AddLocation: React.FC = () => {\n  const [options, setOptions] = useState<Array<LocationType>>([]);\n  const [selected, setSelected] = useState<number | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  return (\n    <>\n      <Search\n        placeholder=\"Enter Location Name\"\n        allowClear\n        loading={false}\n        enterButton=\"Search Location\"\n        size=\"large\"\n        style={{\n          marginBottom: 40,\n        }}\n        onSearch={async (query) =>\n          await axios\n            .get(\n              `https://group-q-hotzone.herokuapp.com/hotzone/locations/${query}`\n            )\n            .then((res) => {\n              setOptions(res?.data);\n            })\n            .catch((err) => {\n              notification[\"error\"]({\n                message: \"Error Finding Location\",\n                description: err.response.data,\n              });\n            })\n        }\n      />\n      <Radio.Group\n        onChange={(e) => setSelected(e.target.value)}\n        value={selected}\n        style={{ width: \"100%\" }}\n      >\n        {options.map(({ name, address, x_coord, y_coord }, idx) => (\n          <Card key={idx}>\n            <Meta\n              avatar={\n                <Radio value={idx}>\n                  {name}\n                  {address && `, ${address}`} - {x_coord}, {y_coord}\n                </Radio>\n              }\n            />\n          </Card>\n        ))}\n      </Radio.Group>\n      {selected !== null && (\n        <Button\n          type=\"primary\"\n          style={{ width: \"100%\" }}\n          loading={loading}\n          onClick={async () => {\n            setLoading(true);\n            await axios\n              .post(\n                \"https://group-q-hotzone.herokuapp.com/hotzone/locations/\",\n                options[selected]\n              )\n              .then((res) => {\n                notification[\"success\"]({\n                  message: \"Location Created\",\n                  description: JSON.stringify(res.data),\n                });\n                setOptions([]);\n                setSelected(null);\n              })\n              .catch((err) => {\n                notification[\"error\"]({\n                  message: \"Error Creating Location\",\n                  description: err.response.data,\n                });\n              });\n            setLoading(false);\n          }}\n        >\n          Create Location\n        </Button>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Space, Spin, Table } from \"antd\";\n\ninterface PatientType {\n  hkid: string;\n  name: string;\n  dob: Date;\n}\n\nconst columns = [\n  {\n    title: \"HKID\",\n    dataIndex: \"hkid\",\n    key: \"hkid\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Date of Birth\",\n    dataIndex: \"dob\",\n    key: \"dob\",\n  },\n];\n\nexport const PatientTable: React.FC = () => {\n  const [patients, setPatients] = useState<Array<PatientType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPatientList = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\"https://group-q-hotzone.herokuapp.com/hotzone/patients.json\");\n        const patientList: Array<PatientType> = response.data;\n        setPatients(patientList);\n        setLoading(false);\n        setError(\"\");\n      } catch(e) {\n        setPatients([]);\n        setError(\"failed to fetch patients data\");\n        setLoading(false);\n      }\n    }\n\n    fetchPatientList();\n\n  }, []);\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    patients && (\n      <Table\n        dataSource={patients}\n        columns={columns}\n      />\n    )\n  )\n  \n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { Space, Spin, Table } from \"antd\";\n\ninterface CaseType {\n  virus: string;\n  case_no: number;\n  confirmed: Date;\n  origin: string;\n  patient_hkid: string;\n  patient_fname: string;\n  patient_lname: string;\n  patient_locations_count: number;\n}\n\nconst columns = [\n  {\n    title: \"Pathogen\",\n    dataIndex: [\"virus\", \"name\"],\n    key: \"pathogen\",\n  },\n  {\n    title: \"Case number\",\n    dataIndex: \"case_no\",\n    key: \"case_no\",\n  },\n  {\n    title: \"Confirmed on\",\n    dataIndex: \"confirmed\",\n    key: \"confirmed\",\n  },\n  {\n    title: \"Origin\",\n    dataIndex: \"origin\",\n    key: \"origin\",\n  },\n  {\n    title: \"Patient Name\",\n    dataIndex: [\"patient\", \"name\"],\n    key: \"patient_name\",\n  },\n];\n\nexport const CasesList: React.FC = () => {\n  const [cases, setCases] = useState<Array<CaseType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\")\n\n  useEffect(() => {\n    const fetchCasesList = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\"https://group-q-hotzone.herokuapp.com/hotzone/cases.json\");\n        const casesList: Array<CaseType> = response.data;\n        setCases(casesList);\n        setLoading(false);\n        setError(\"\");\n      } catch(e) {\n        setCases([]);\n        setError(\"failed to fetch cases data\");\n        setLoading(false);\n      }\n    }\n\n    fetchCasesList();\n  }, [])\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    cases && (\n      <Table\n        dataSource={cases}\n        columns={columns}\n      />\n    )\n  );\n}","import React, { FC } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { HomePage, AddLocation, PatientTable, CasesList } from \"./components\";\n\nconst App: FC = () => (\n  <div className=\"App\" style={{ height: \"100vh\" }}>\n    <Router>\n      <HomePage>\n        <Switch>\n          <Route exact path=\"/\">\n            <AddLocation />\n          </Route>\n          <Route exact path=\"/cases\">\n            <CasesList />\n          </Route>\n          <Route exact path=\"/patients\">\n            <PatientTable />\n          </Route>\n        </Switch>\n      </HomePage>\n    </Router>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}