{"version":3,"sources":["components/Logo.tsx","components/AddLocation.tsx","components/HomePage.tsx","App.tsx","utils/index.ts","reportWebVitals.ts","index.tsx"],"names":["Logo","className","style","color","padding","Search","Input","Meta","Card","AddLocation","useState","options","setOptions","selected","setSelected","loading","setLoading","placeholder","allowClear","enterButton","size","marginBottom","onSearch","query","a","axios","get","then","res","data","Group","onChange","e","target","value","width","map","idx","name","address","x_coord","y_coord","avatar","type","onClick","post","notification","message","description","JSON","stringify","catch","err","response","Content","Layout","Footer","Sider","HomePage","height","breakpoint","theme","mode","defaultSelectedKeys","Item","icon","EnvironmentOutlined","UserOutlined","margin","minHeight","textAlign","App","title","dataIndex","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad32adec.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Logo = () => (\n  <h2 className=\"logo\" style={{ color: \"white\", padding: 20 }}>\n    HotZüéØne\n  </h2>\n);\n","import React, { useState } from \"react\";\nimport { Button, Card, Input, Radio, notification } from \"antd\";\nimport axios from \"axios\";\n\nimport { LocationType } from \"../interfaces\";\n\nconst { Search } = Input;\nconst { Meta } = Card;\n\nexport const AddLocation: React.FC = () => {\n  const [options, setOptions] = useState<Array<LocationType>>([]);\n  const [selected, setSelected] = useState<number | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  return (\n    <>\n      <Search\n        placeholder=\"Enter Location Name\"\n        allowClear\n        loading={false}\n        enterButton=\"Search Location\"\n        size=\"large\"\n        style={{\n          marginBottom: 40,\n        }}\n        onSearch={async (query) =>\n          await axios\n            .get(\n              `https://group-q-hotzone.herokuapp.com/hotzone/locations/${query}`\n            )\n            .then((res) => {\n              setOptions(res?.data);\n            })\n        }\n      />\n      <Radio.Group\n        onChange={(e) => setSelected(e.target.value)}\n        value={selected}\n        style={{ width: \"100%\" }}\n      >\n        {options.map(({ name, address, x_coord, y_coord }, idx) => (\n          <Card key={idx}>\n            <Meta\n              avatar={\n                <Radio value={idx}>\n                  {name}\n                  {address && `, ${address}`} - {x_coord}, {y_coord}\n                </Radio>\n              }\n            />\n          </Card>\n        ))}\n      </Radio.Group>\n      {selected !== null && (\n        <Button\n          type=\"primary\"\n          style={{ width: \"100%\" }}\n          loading={loading}\n          onClick={async () => {\n            setLoading(true);\n            await axios\n              .post(\n                \"https://group-q-hotzone.herokuapp.com/hotzone/locations/\",\n                options[selected]\n              )\n              .then((res) => {\n                notification[\"success\"]({\n                  message: \"Location Created\",\n                  description: JSON.stringify(res.data),\n                });\n                setOptions([]);\n                setSelected(null);\n              })\n              .catch((err) => {\n                notification[\"error\"]({\n                  message: \"Error Creating Location\",\n                  description: err.response.data,\n                });\n              });\n            setLoading(false);\n          }}\n        >\n          Create Location\n        </Button>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { EnvironmentOutlined, UserOutlined } from \"@ant-design/icons\";\n\nimport { Logo } from \"./Logo\";\nimport { LocationList } from \"./LocationList\";\nimport { AddLocation } from \"./AddLocation\";\n\nconst { Content, Footer, Sider } = Layout;\n\nexport const HomePage: React.FC = () => (\n  <Layout style={{ height: \"100%\" }}>\n    <Sider breakpoint=\"lg\">\n      <Logo />\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n        <Menu.Item key=\"1\" icon={<EnvironmentOutlined />}>\n          Locations\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<UserOutlined />}>\n          Cases\n        </Menu.Item>\n      </Menu>\n    </Sider>\n    <Layout>\n      <Content style={{ margin: \"24px 16px 0\" }}>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 360 }}\n        >\n          <AddLocation />\n        </div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>Made with ‚ô•Ô∏è</Footer>\n    </Layout>\n  </Layout>\n);\n","import React, { FC } from \"react\";\n\nimport \"./App.css\";\nimport { HomePage } from \"./components\";\n\nconst App: FC = () => (\n  <div className=\"App\" style={{ height: \"100vh\" }}>\n    <HomePage />\n  </div>\n);\n\nexport default App;\n","export const locationColumns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"X Co-ordinate\",\n    dataIndex: \"x_coord\",\n    key: \"x_coord\",\n  },\n  {\n    title: \"Y Co-ordinate\",\n    dataIndex: \"y_coord\",\n    key: \"y_coord\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n];\n\nexport const locationListColumns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  ...locationColumns,\n];\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}