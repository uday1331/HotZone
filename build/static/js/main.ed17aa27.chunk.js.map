{"version":3,"sources":["components/Logo.tsx","components/HomePage.tsx","utils/index.ts","components/LocationList.tsx","components/AddLocation.tsx","components/PatientTable.tsx","components/CasesList.tsx","components/CaseDetails.tsx","components/LoginPage.tsx","components/Settings.tsx","components/Cluster.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","color","className","style","display","Content","Layout","Footer","Header","HomePage","children","activeNav","useLocation","pathname","split","minHeight","theme","mode","selectedKeys","Item","icon","UserOutlined","to","EnvironmentOutlined","DotChartOutlined","SettingOutlined","margin","padding","textAlign","locationListColumns","title","dataIndex","key","casesColumns","LocationList","useState","locations","setLocations","loading","setLoading","useEffect","axios","get","headers","Authorization","localStorage","getItem","then","res","data","size","type","shape","PlusOutlined","marginBottom","dataSource","columns","Title","Typography","Search","Input","Meta","Card","AddLocation","options","setOptions","selected","setSelected","addLoading","setAddLoading","listLoading","setListLoading","level","placeholder","enterButton","onSearch","query","a","catch","err","message","error","width","onClick","post","success","JSON","stringify","response","Group","onChange","e","target","value","map","idx","name","address","x_coord","y_coord","avatar","PatientTable","patients","setPatients","setError","patientList","fetchPatientList","render","text","record","case_no","CasesList","cases","setCases","casesList","fetchCasesList","Panel","Collapse","Option","Select","RangePicker","DatePicker","CaseDetails","history","useHistory","useParams","caseDetails","setCaseDetails","addVisitModalVisible","setAddVisitModalVisible","locationOptions","setLocationOptions","startDate","setStartDate","endDate","setEndDate","category","setCategory","locationId","setLocationId","addVisitLoading","setAddVisitLoading","caseResponse","caseData","sort","v1","v2","date_from","date_to","locationsResponse","locationsData","fetchCaseOne","confirmed","label","virus","origin","patient","hkid","dob","alignItems","marginLeft","centered","visible","footer","closable","onCancel","justifyContent","onCalendarChange","_","dateStrings","onSelect","val","showSearch","id","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","location","marginTop","go","visit","index","header","LoginPage","Link","onFinish","username","password","token","setItem","document","href","marginRight","rules","required","Password","htmlType","Settings","newPassword","setNewPassword","length","put","new_password","danger","clear","React","Cluster","clusters","setClusters","layout","labelCol","span","wrapperCol","distance","time","minimum_cluster","offset","Object","keys","locations_involved","pagination","bordered","renderItem","item","NavBarLayout","exact","path","LoginLayout","height","flexDirection","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed17aa27.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface ILogoProps {\n  color?: string;\n}\n\nexport const Logo: React.FC<ILogoProps> = ({ color = \"white\" }) => (\n  <h2 className=\"logo\" style={{ color, display: \"inline\" }}>\n    HotZ🎯ne\n  </h2>\n);\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  EnvironmentOutlined,\n  UserOutlined,\n  SettingOutlined,\n  DotChartOutlined,\n} from \"@ant-design/icons\";\n\nimport { Logo } from \"./Logo\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst { Content, Footer, Header } = Layout;\n\ninterface HomePageProps {\n  children: React.ReactNode;\n}\n\nexport const HomePage: React.FC<HomePageProps> = ({ children }) => {\n  const location = useLocation();\n  const activeNav = location.pathname.split(\"/\")[1] || \"cases\";\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header>\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[activeNav]}>\n          <Menu.Item key=\"0\">\n            <Logo />\n          </Menu.Item>\n          <Menu.Item key=\"cases\" icon={<UserOutlined />}>\n            <Link to=\"/\">Cases</Link>\n          </Menu.Item>\n          <Menu.Item key=\"locations\" icon={<EnvironmentOutlined />}>\n            <Link to=\"/locations\">Locations</Link>\n          </Menu.Item>\n          <Menu.Item key=\"patients\" icon={<UserOutlined />}>\n            <Link to=\"/patients\">Patients</Link>\n          </Menu.Item>\n          <Menu.Item key=\"cluster\" icon={<DotChartOutlined />}>\n            <Link to=\"/cluster\">Cluster</Link>\n          </Menu.Item>\n          <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n            <Link to=\"/settings\">Settings</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Layout>\n        <Content style={{ margin: \"24px 16px 0\" }}>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            {children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>Made with ♥️</Footer>\n      </Layout>\n    </Layout>\n  );\n};\n","export const locationColumns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"X Co-ordinate\",\n    dataIndex: \"x_coord\",\n    key: \"x_coord\",\n  },\n  {\n    title: \"Y Co-ordinate\",\n    dataIndex: \"y_coord\",\n    key: \"y_coord\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n];\n\nexport const locationListColumns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  ...locationColumns,\n];\n\nexport const casesColumns = [\n  {\n    title: \"X Co-ordinate\",\n    dataIndex: \"x\",\n    key: \"x\",\n  },\n  {\n    title: \"Y Co-ordinate\",\n    dataIndex: \"y\",\n    key: \"y\",\n  },\n  {\n    title: \"Day\",\n    dataIndex: \"day\",\n    key: \"day\",\n  },\n  {\n    title: \"Case Number\",\n    dataIndex: \"caseNo\",\n    key: \"caseNo\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Space, Spin, Table } from \"antd\";\nimport axios from \"axios\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport { LocationType } from \"../interfaces\";\nimport { locationListColumns } from \"../utils\";\n\nexport const LocationList: React.FC = () => {\n  const [locations, setLocations] = useState<Array<LocationType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loading) {\n      axios\n        .get(\n          `/hotzone/locations.json`,\n          {\n            headers: {\n              Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        )\n        .then((res) => {\n          setLocations(res?.data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n\n  if (loading)\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n\n  return (\n    <>\n      <Link to=\"/addlocation\">\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          icon={<PlusOutlined />}\n          size=\"large\"\n          style={{\n            marginBottom: 40,\n          }}\n        >\n          Add Location\n        </Button>\n      </Link>\n      <Table dataSource={locations} columns={locationListColumns} />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  Input,\n  Radio,\n  notification,\n  Space,\n  Spin,\n  message,\n} from \"antd\";\nimport axios from \"axios\";\n\nimport { LocationType } from \"../interfaces\";\n\nconst { Title } = Typography;\nconst { Search } = Input;\nconst { Meta } = Card;\n\nexport const AddLocation: React.FC = () => {\n  const [options, setOptions] = useState<Array<LocationType>>([]);\n  const [selected, setSelected] = useState<number | null>(null);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [listLoading, setListLoading] = useState<boolean>(false);\n\n  return (\n    <>\n      <Title level={2}>Add location to HotZone</Title>\n      <Search\n        placeholder=\"Enter Location Name\"\n        loading={false}\n        enterButton=\"Search Location\"\n        size=\"large\"\n        style={{\n          marginBottom: 40,\n        }}\n        onSearch={async (query) => {\n          setListLoading(true);\n          await axios\n            .get(\n              `/hotzone/locations/${query}`,\n              {\n                headers: {\n                  Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n              }\n            )\n            .then((res) => {\n              setOptions(res?.data);\n            })\n            .catch((err) => {\n              message.error(`Error Finding Location`);\n            });\n          setListLoading(false);\n        }}\n      />\n      {selected !== null && (\n        <Button\n          type=\"primary\"\n          style={{ width: \"100%\", marginBottom: 40 }}\n          loading={addLoading}\n          onClick={async () => {\n            setAddLoading(true);\n            await axios\n              .post(\n                \"/hotzone/locations/\",\n                options[selected],\n                {\n                  headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                  },\n                }\n              )\n              .then((res) => {\n                message.success(\n                  `Location Created: ${JSON.stringify(res.data)}`\n                );\n                setOptions([]);\n                setSelected(null);\n              })\n              .catch((err) => {\n                message.error(`Location Creation Error: ${err.response.data}`);\n                setSelected(null);\n              });\n            setAddLoading(false);\n          }}\n        >\n          Create Location\n        </Button>\n      )}\n      {listLoading ? (\n        <Space size=\"middle\">\n          <Spin size=\"large\" />\n        </Space>\n      ) : (\n        <Radio.Group\n          onChange={(e) => setSelected(e.target.value)}\n          value={selected}\n          style={{ width: \"100%\" }}\n        >\n          {options?.map(({ name, address, x_coord, y_coord }, idx) => (\n            <Card key={idx}>\n              <Meta\n                avatar={\n                  <Radio value={idx}>\n                    {name}\n                    {address && `, ${address}`} - {x_coord}, {y_coord}\n                  </Radio>\n                }\n              />\n            </Card>\n          ))}\n        </Radio.Group>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"antd\";\nimport { Space, Spin, Table } from \"antd\";\n\nconst { Title } = Typography;\n\ninterface PatientType {\n  hkid: string;\n  name: string;\n  dob: Date;\n}\n\nconst columns = [\n  {\n    title: \"HKID\",\n    dataIndex: \"hkid\",\n    key: \"hkid\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Date of Birth\",\n    dataIndex: \"dob\",\n    key: \"dob\",\n  },\n];\n\nexport const PatientTable: React.FC = () => {\n  const [patients, setPatients] = useState<Array<PatientType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPatientList = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          \"/hotzone/patients.json\",\n          {\n            headers: {\n              Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        const patientList: Array<PatientType> = response.data;\n        setPatients(patientList);\n        setLoading(false);\n        setError(\"\");\n      } catch (e) {\n        setPatients([]);\n        setError(\"failed to fetch patients data\");\n        setLoading(false);\n      }\n    };\n\n    fetchPatientList();\n  }, []);\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>;\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    patients && (\n      <>\n        <Title level={2}>All patients</Title>\n        <Table dataSource={patients} columns={columns} />\n      </>\n    )\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"antd\";\nimport { Space, Spin, Table } from \"antd\";\n\nconst { Title } = Typography;\n\ninterface CaseType {\n  virus: Object;\n  case_no: number;\n  confirmed: Date;\n  origin: string;\n  patient: Object;\n  locations: Object;\n}\n\nconst columns = [\n  {\n    title: \"Pathogen\",\n    dataIndex: [\"virus\", \"name\"],\n    key: \"pathogen\",\n  },\n  {\n    title: \"Case number\",\n    dataIndex: \"case_no\",\n    key: \"case_no\",\n  },\n  {\n    title: \"Confirmed on\",\n    dataIndex: \"confirmed\",\n    key: \"confirmed\",\n  },\n  {\n    title: \"Origin\",\n    dataIndex: \"origin\",\n    key: \"origin\",\n  },\n  {\n    title: \"Patient Name\",\n    dataIndex: [\"patient\", \"name\"],\n    key: \"patient_name\",\n  },\n  {\n    title: \"Actions\",\n    key: \"actions\",\n    render: (text: string, record: any) => (\n      <Link to={`/case/${record.case_no}`}>Details</Link>\n    ),\n  },\n];\n\nexport const CasesList: React.FC = () => {\n  const [cases, setCases] = useState<Array<CaseType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchCasesList = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          \"/hotzone/cases.json\",\n          {\n            headers: {\n              Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        const casesList: Array<CaseType> = response.data;\n        setCases(casesList);\n        setLoading(false);\n        setError(\"\");\n      } catch (e) {\n        setCases([]);\n        setError(\"failed to fetch cases data\");\n        setLoading(false);\n      }\n    };\n\n    fetchCasesList();\n  }, []);\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>;\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    cases && (\n      <>\n        <Title level={2}>All cases</Title>\n        <Table dataSource={cases} columns={columns} />\n      </>\n    )\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Layout,\n  Typography,\n  Breadcrumb,\n  Descriptions,\n  Space,\n  Spin,\n  Collapse,\n  Button,\n  Modal,\n  Select,\n  DatePicker,\n  message\n} from \"antd\";\n\nconst { Panel } = Collapse;\nconst { Content } = Layout;\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n \ninterface ParamType {\n  case_no: string;\n}\n\ninterface VirusType {\n  disease: string;\n  max_infectious: number;\n  name: string;\n}\n\ninterface PatientType {\n  dob: string;\n  hkid: string;\n  name: string;\n}\n\ninterface VisitType {\n  case: string;\n  category: string;\n  date_from: string;\n  date_to: string;\n  location: LocationType;\n}\n\ninterface LocationType {\n  address: string;\n  id: number;\n  name: string;\n  x_coord: number;\n  y_coord: number;\n}\n\ninterface CaseType {\n  id: number;\n  virus: VirusType;\n  case_no: number;\n  confirmed: Date;\n  origin: string;\n  patient: PatientType;\n  locations: Array<VisitType>;\n}\n\nexport const CaseDetails: React.FC = () => {\n  const history = useHistory();\n\n  const { case_no } = useParams<ParamType>();\n  const [caseDetails, setCaseDetails] = useState<CaseType>({} as CaseType);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\");\n  const [addVisitModalVisible, setAddVisitModalVisible] = useState(false);\n  const [locationOptions, setLocationOptions] = useState<LocationType[]>([]);\n\n  //fields for creating a vist\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [locationId, setLocationId] = useState<number>();\n  const [addVisitLoading, setAddVisitLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCaseOne = async () => {\n      setLoading(true);\n      try {\n        const caseResponse = await axios.get(\n          `/hotzone/case/${case_no}`,\n          {\n            headers: {\n              Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        const caseData: CaseType = caseResponse.data;\n        caseData.locations.sort((v1: VisitType, v2: VisitType) => {\n          return v1.date_from > v2.date_to ? 1 : -1;\n        });\n\n        const locationsResponse = await axios.get(\n          `/hotzone/locations/`,\n          {\n            headers: {\n              Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        );\n        const locationsData: LocationType[] = locationsResponse.data;\n\n        setCaseDetails(caseData);\n        setLocationOptions(locationsData);\n        setLoading(false);\n        setError(\"\");\n      } catch (e) {\n        setCaseDetails({} as CaseType);\n        setLoading(false);\n        setError(\"failed to fetch case data\");\n      }\n    };\n\n    fetchCaseOne();\n  }, [case_no]);\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>;\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    caseDetails.confirmed && (\n      <Content style={{ textAlign: \"left\" }}>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link to=\"/cases\">Cases</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{`Case number: #${case_no}`}</Breadcrumb.Item>\n        </Breadcrumb>\n        <Title level={2}>{`Case details`}</Title>\n        <Descriptions title=\"Case details\">\n          <Descriptions.Item label=\"Infecting pathogen\">\n            {caseDetails.virus.name}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Confirmed date\">\n            {caseDetails.confirmed}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Origin\">\n            {caseDetails.origin === \"I\" ? \"Imported\" : \"Local\"}\n          </Descriptions.Item>\n        </Descriptions>\n        <Descriptions title=\"Patient\">\n          <Descriptions.Item label=\"HKID\">\n            {caseDetails.patient.hkid}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Name\">\n            {caseDetails.patient.name}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Date of birth\">\n            {caseDetails.patient.dob}\n          </Descriptions.Item>\n        </Descriptions>\n\n        <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"12px\" }}>\n          <Title style={{ margin: 0 }} level={3}>Locations visited</Title>\n          <Button style={{ marginLeft: \"12px\" }} shape=\"round\" type=\"primary\"\n          onClick={() => setAddVisitModalVisible(true)}>\n            Add Visit\n          </Button>\n        </div>\n\n        <Modal\n          title=\"Add Visit\"\n          centered\n          visible={addVisitModalVisible}\n          footer={null}\n          closable\n          onCancel={() => setAddVisitModalVisible(false)}\n        >\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: \"12px\" }}>\n            <RangePicker onCalendarChange={(_, dateStrings) => {\n              setStartDate(dateStrings[0]);\n              setEndDate(dateStrings[1]);\n            }} />\n\n            <Select\n              placeholder=\"Category\"\n              onSelect={val => setCategory(val as string)}\n            >\n              <Option value=\"V\">\n                Visit\n              </Option>\n              <Option value=\"R\">\n                Residence\n              </Option>\n              <Option value=\"W\">\n                Workplace\n              </Option>\n            </Select>\n\n          </div>\n\n          <Select\n            style={{ width: \"100%\" }}\n            showSearch\n            placeholder=\"Add a location\"\n            onSelect={id => setLocationId(id as number)}\n            optionFilterProp=\"title\"\n            filterOption={(input, option) =>\n              option?.title.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {\n              locationOptions?.map(location => (\n                <Option value={location.id} title={location.name}>\n                  <div>\n                    <p>{location.name}</p>\n                    <p>{location.address}</p>\n                    <p>{`X: ${location.x_coord} Y: ${location.y_coord}`}</p>\n                  </div>\n                </Option>\n              ))\n            }\n          </Select>\n\n          <Button\n          style={{ marginTop: \"12px\" }}\n            type=\"primary\"\n            shape=\"round\"\n            loading={addVisitLoading}\n            onClick={async () => {\n              if (startDate && endDate && category && locationId) {\n                try {\n                  setAddVisitLoading(true);\n                  const response = await axios.post(\n                    \"/hotzone/visit/\",\n                    {\n                      \"case\": caseDetails.id,\n                      \"location\": locationId,\n                      \"date_from\": startDate,\n                      \"date_to\": endDate,\n                      \"category\": category\n                    },\n                    {\n                      headers: {\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                      },\n                    }\n                  );\n                  message.success(\"visit added successfully!\");\n                  setAddVisitLoading(false);\n                  setAddVisitModalVisible(false);\n                  history.go(0);\n                } catch (e) {\n                  message.error(\"something went wrong! Try again.\");\n                  setAddVisitLoading(false);\n                } \n              } else {\n                message.error(\"please select all fields\")\n              }\n            }}\n          >\n            Create Visit\n          </Button>\n        </Modal>\n\n        <Collapse>\n          {caseDetails.locations.map((visit: VisitType, index) => (\n            <Panel\n              key={`${visit.location.name} ${visit.date_from}`}\n              header={`${visit.location.name} | From: ${visit.date_from} - To: ${visit.date_to}`}\n            >\n              <Descriptions>\n                <Descriptions.Item label=\"Location ID\">\n                  {visit.location.id}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Address\">\n                  {visit.location.address}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"X coordinates\">\n                  {visit.location.x_coord}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Y coordinates\">\n                  {visit.location.y_coord}\n                </Descriptions.Item>\n              </Descriptions>\n            </Panel>\n          ))}\n        </Collapse>\n      </Content>\n    )\n  );\n};\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, message, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { Logo } from \"./Logo\";\nimport { Link } from \"react-router-dom\";\n\nconst { Link: LinkText } = Typography;\n\ninterface ILogin {\n  username: string;\n  password: string;\n}\n\nexport const LoginPage: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onFinish = async ({ username, password }: ILogin) => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\n        \"/login/\",\n        {\n          username,\n          password,\n        }\n      );\n      const token = response.data.token;\n      if (token) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"userLoggedIn\", username);\n      }\n      message.success(\"logged in successfully\");\n      //reroute to home page\n      document.location.href = \"/\";\n    } catch (e) {\n      message.error(\"failed to login\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Logo color=\"black\" />\n      <Form\n        style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"50%\" }}\n        name=\"basic\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      <a href=\"https://hotzone-group-q-final.herokuapp.com/password-reset/\">\n        Forgot Password?\n      </a>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Typography, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { Title } = Typography;\n\nexport const Settings: React.FC = () => {\n  const history = useHistory();\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div>\n      <Title>Change Password</Title>\n      <Input\n        placeholder=\"new password\"\n        type=\"password\"\n        onChange={(e) => {\n          setNewPassword(e.target.value);\n        }}\n      />\n      <Button\n        style={{ marginTop: \"12px\" }}\n        type=\"primary\"\n        onClick={async () => {\n          try {\n            setLoading(true);\n            if (newPassword && newPassword.length > 3) {\n              await axios.put(\n                \"/hotzone/change_password/\",\n                {\n                  new_password: newPassword,\n                },\n                {\n                  headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                  },\n                }\n              );\n              message.success(\"password changed successfully!\");\n              setNewPassword(\"\");\n            } else {\n              message.error(\"password is too short or blank!\");\n            }\n          } catch (e) {\n            message.error(\"failed to change password\");\n          }\n          setLoading(false);\n        }}\n        loading={loading}\n      >\n        Change\n      </Button>\n\n      <Button\n        style={{ display: \"block\", marginTop: \"64px\", marginLeft: \"auto\", marginRight: \"auto\" }}\n        type=\"primary\"\n        danger\n        onClick={() => {\n          localStorage.clear();\n          history.go(0);\n        }}\n      >\n        Log Out\n      </Button>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Collapse,\n  Space,\n  Spin,\n  Table,\n  List,\n  Form,\n  Input,\n  Typography,\n  Button,\n} from \"antd\";\nimport axios from \"axios\";\n\nimport { ClusterType } from \"../interfaces\";\nimport { casesColumns } from \"../utils\";\n\nconst { useState } = React;\nconst { Panel } = Collapse;\nconst { Title } = Typography;\n\nexport const Cluster: React.FC = () => {\n  const [clusters, setClusters] = useState<any>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 8 },\n  };\n\n  const onFinish = async ({\n    distance,\n    time,\n    minimum_cluster,\n  }: {\n    distance: string;\n    time: string;\n    minimum_cluster: string;\n  }) => {\n    //100-2-1\n    setLoading(true);\n    const res = await axios.get(\n      `/hotzone/clusters/?distance=${distance}&time=${time}&minimum_cluster=${minimum_cluster}`,\n      {\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        },\n      }\n    );\n    setClusters(res?.data);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Title level={2}>Clustering</Title>\n      <Form {...layout} onFinish={onFinish}>\n        <Form.Item\n          label=\"Distance\"\n          name=\"distance\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Time\" name=\"time\" rules={[{ required: true }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Minimum Clusters\"\n          name=\"minimum_cluster\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Get Clusters\n          </Button>\n        </Form.Item>\n      </Form>\n      {loading ? (\n        <Space size=\"middle\">\n          <Spin size=\"large\" />\n        </Space>\n      ) : (\n        <>\n          {Object.keys(clusters).map((id: string) => {\n            const { cases, locations_involved } = clusters[id] as ClusterType;\n            return (\n              <>\n                <Collapse>\n                  <Panel\n                    key={id}\n                    header={`Cluster number: ${id} - ${cases.length} Cases and ${locations_involved.length} Locations`}\n                  >\n                    <Title level={3}>Cases</Title>\n                    <Table\n                      dataSource={cases}\n                      columns={casesColumns}\n                      pagination={false}\n                    />\n                    <Title level={3}>Locations</Title>\n                    <List\n                      size=\"small\"\n                      bordered\n                      dataSource={locations_involved}\n                      renderItem={(item) => <List.Item>{item}</List.Item>}\n                    />\n                  </Panel>\n                </Collapse>\n              </>\n            );\n          })}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport {\n  HomePage,\n  AddLocation,\n  LocationList,\n  PatientTable,\n  CasesList,\n  LoginPage,\n  CaseDetails,\n  Settings,\n  Cluster,\n} from \"./components\";\n\nconst NavBarLayout = () => {\n  if (!localStorage.getItem(\"token\")) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <HomePage>\n      <Switch>\n        <Route exact path=\"/\">\n          <CasesList />\n        </Route>\n        <Route exact path=\"/locations\">\n          <LocationList />\n        </Route>\n        <Route path=\"/case/:case_no\">\n          <CaseDetails />\n        </Route>\n        <Route exact path=\"/patients\">\n          <PatientTable />\n        </Route>\n        <Route exact path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route exact path=\"/addlocation\">\n          <AddLocation />\n        </Route>\n        <Route exact path=\"/cluster\">\n          <Cluster />\n        </Route>\n      </Switch>\n    </HomePage>\n  );\n};\n\nconst LoginLayout = () => (\n  <div\n    style={{\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    }}\n  >\n    <LoginPage />\n  </div>\n);\n\nconst App: FC = () => (\n  <div className=\"App\" style={{ height: \"100vh\" }}>\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginLayout />\n        </Route>\n        <Route path=\"/\">\n          <NavBarLayout />\n        </Route>\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}