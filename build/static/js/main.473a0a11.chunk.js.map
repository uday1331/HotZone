{"version":3,"sources":["components/Logo.tsx","components/HomePage.tsx","utils/index.ts","components/LocationList.tsx","components/AddLocation.tsx","components/PatientTable.tsx","components/CasesList.tsx","components/CaseDetails.tsx","components/LoginPage.tsx","components/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","color","className","style","display","Content","Layout","Footer","Header","HomePage","children","activeNav","useLocation","pathname","split","minHeight","theme","mode","selectedKeys","Item","icon","UserOutlined","to","EnvironmentOutlined","margin","padding","textAlign","locationListColumns","title","dataIndex","key","LocationList","useState","locations","setLocations","loading","setLoading","useEffect","axios","get","headers","Authorization","localStorage","getItem","then","res","data","size","type","shape","PlusOutlined","marginBottom","dataSource","columns","Title","Typography","Search","Input","Meta","Card","AddLocation","options","setOptions","selected","setSelected","addLoading","setAddLoading","listLoading","setListLoading","level","placeholder","enterButton","onSearch","query","a","catch","err","message","error","width","onClick","post","success","JSON","stringify","response","Group","onChange","e","target","value","map","idx","name","address","x_coord","y_coord","avatar","PatientTable","patients","setPatients","setError","patientList","fetchPatientList","render","text","record","case_no","CasesList","cases","setCases","casesList","fetchCasesList","Panel","Collapse","CaseDetails","useParams","caseDetails","setCaseDetails","sort","v1","v2","date_from","date_to","fetchCaseOne","confirmed","label","virus","origin","patient","hkid","dob","visit","index","header","location","id","LoginPage","Link","onFinish","username","password","token","setItem","document","href","marginRight","marginLeft","rules","required","Password","htmlType","Settings","newPassword","setNewPassword","marginTop","length","put","new_password","NavBarLayout","exact","path","LoginLayout","height","flexDirection","justifyContent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.473a0a11.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface ILogoProps {\n  color?: string;\n}\n\nexport const Logo: React.FC<ILogoProps> = ({ color = \"white\" }) => (\n  <h2 className=\"logo\" style={{ color, display: \"inline\" }}>\n    HotZ🎯ne\n  </h2>\n);\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { EnvironmentOutlined, UserOutlined } from \"@ant-design/icons\";\n\nimport { Logo } from \"./Logo\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst { Content, Footer, Header } = Layout;\n\ninterface HomePageProps {\n  children: React.ReactNode;\n}\n\nexport const HomePage: React.FC<HomePageProps> = ({ children }) => {\n  const location = useLocation();\n  const activeNav = location.pathname.split(\"/\")[1] || \"cases\";\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header>\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[activeNav]}>\n          <Menu.Item key=\"0\">\n            <Logo />\n          </Menu.Item>\n          <Menu.Item key=\"cases\" icon={<UserOutlined />}>\n            <Link to=\"/\">Cases</Link>\n          </Menu.Item>\n          <Menu.Item key=\"locations\" icon={<EnvironmentOutlined />}>\n            <Link to=\"/locations\">Locations</Link>\n          </Menu.Item>\n          <Menu.Item key=\"patients\" icon={<UserOutlined />}>\n            <Link to=\"/patients\">Patients</Link>\n          </Menu.Item>\n          <Menu.Item key=\"settings\" icon={<UserOutlined />}>\n            <Link to=\"/settings\">Settings</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Layout>\n        <Content style={{ margin: \"24px 16px 0\" }}>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            {children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>Made with ♥️</Footer>\n      </Layout>\n    </Layout>\n  );\n};\n","export const locationColumns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"X Co-ordinate\",\n    dataIndex: \"x_coord\",\n    key: \"x_coord\",\n  },\n  {\n    title: \"Y Co-ordinate\",\n    dataIndex: \"y_coord\",\n    key: \"y_coord\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n];\n\nexport const locationListColumns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n  },\n  ...locationColumns,\n];\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Space, Spin, Table } from \"antd\";\nimport axios from \"axios\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport { LocationType } from \"../interfaces\";\nimport { locationListColumns } from \"../utils\";\n\nexport const LocationList: React.FC = () => {\n  const [locations, setLocations] = useState<Array<LocationType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loading) {\n      axios\n        .get(`https://group-q-hotzone.herokuapp.com/hotzone/locations.json`, {\n          headers: {\n            Authorization: `Token ${localStorage.getItem(\"token\")}`,\n          },\n        })\n        .then((res) => {\n          setLocations(res?.data);\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n\n  if (loading)\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n\n  return (\n    <>\n      <Link to=\"/addlocation\">\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          icon={<PlusOutlined />}\n          size=\"large\"\n          style={{\n            marginBottom: 40,\n          }}\n        >\n          Add Location\n        </Button>\n      </Link>\n      <Table dataSource={locations} columns={locationListColumns} />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  Input,\n  Radio,\n  notification,\n  Space,\n  Spin,\n  message,\n} from \"antd\";\nimport axios from \"axios\";\n\nimport { LocationType } from \"../interfaces\";\n\nconst { Title } = Typography;\nconst { Search } = Input;\nconst { Meta } = Card;\n\nexport const AddLocation: React.FC = () => {\n  const [options, setOptions] = useState<Array<LocationType>>([]);\n  const [selected, setSelected] = useState<number | null>(null);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [listLoading, setListLoading] = useState<boolean>(false);\n\n  return (\n    <>\n      <Title level={2}>Add location to HotZone</Title>\n      <Search\n        placeholder=\"Enter Location Name\"\n        loading={false}\n        enterButton=\"Search Location\"\n        size=\"large\"\n        style={{\n          marginBottom: 40,\n        }}\n        onSearch={async (query) => {\n          setListLoading(true);\n          await axios\n            .get(\n              `https://group-q-hotzone.herokuapp.com/hotzone/locations/${query}`,\n              {\n                headers: {\n                  Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n              }\n            )\n            .then((res) => {\n              setOptions(res?.data);\n            })\n            .catch((err) => {\n              message.error(`Error Finding Location`);\n            });\n          setListLoading(false);\n        }}\n      />\n      {selected !== null && (\n        <Button\n          type=\"primary\"\n          style={{ width: \"100%\", marginBottom: 40 }}\n          loading={addLoading}\n          onClick={async () => {\n            setAddLoading(true);\n            await axios\n              .post(\n                \"https://group-q-hotzone.herokuapp.com/hotzone/locations/\",\n                options[selected],\n                {\n                  headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                  },\n                }\n              )\n              .then((res) => {\n                message.success(\n                  `Location Created: ${JSON.stringify(res.data)}`\n                );\n                setOptions([]);\n                setSelected(null);\n              })\n              .catch((err) => {\n                message.error(`Location Creation Error: ${err.response.data}`);\n                setSelected(null);\n              });\n            setAddLoading(false);\n          }}\n        >\n          Create Location\n        </Button>\n      )}\n      {listLoading ? (\n        <Space size=\"middle\">\n          <Spin size=\"large\" />\n        </Space>\n      ) : (\n        <Radio.Group\n          onChange={(e) => setSelected(e.target.value)}\n          value={selected}\n          style={{ width: \"100%\" }}\n        >\n          {options?.map(({ name, address, x_coord, y_coord }, idx) => (\n            <Card key={idx}>\n              <Meta\n                avatar={\n                  <Radio value={idx}>\n                    {name}\n                    {address && `, ${address}`} - {x_coord}, {y_coord}\n                  </Radio>\n                }\n              />\n            </Card>\n          ))}\n        </Radio.Group>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"antd\";\nimport { Space, Spin, Table } from \"antd\";\n\nconst { Title } = Typography;\n\ninterface PatientType {\n  hkid: string;\n  name: string;\n  dob: Date;\n}\n\nconst columns = [\n  {\n    title: \"HKID\",\n    dataIndex: \"hkid\",\n    key: \"hkid\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Date of Birth\",\n    dataIndex: \"dob\",\n    key: \"dob\",\n  },\n];\n\nexport const PatientTable: React.FC = () => {\n  const [patients, setPatients] = useState<Array<PatientType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPatientList = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\"https://group-q-hotzone.herokuapp.com/hotzone/patients.json\", {\n          headers: {\n            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n          }\n        });\n        const patientList: Array<PatientType> = response.data;\n        setPatients(patientList);\n        setLoading(false);\n        setError(\"\");\n      } catch(e) {\n        setPatients([]);\n        setError(\"failed to fetch patients data\");\n        setLoading(false);\n      }\n    }\n\n    fetchPatientList();\n\n  }, []);\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    patients && (\n      <>\n        <Title level={2}>All patients</Title>\n          <Table\n            dataSource={patients}\n            columns={columns}\n          />\n      </>\n    )\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"antd\";\nimport { Space, Spin, Table } from \"antd\";\n\nconst { Title } = Typography; \n\ninterface CaseType {\n  virus: Object;\n  case_no: number;\n  confirmed: Date;\n  origin: string;\n  patient: Object;\n  locations: Object;\n}\n\nconst columns = [\n  {\n    title: \"Pathogen\",\n    dataIndex: [\"virus\", \"name\"],\n    key: \"pathogen\",\n  },\n  {\n    title: \"Case number\",\n    dataIndex: \"case_no\",\n    key: \"case_no\",\n  },\n  {\n    title: \"Confirmed on\",\n    dataIndex: \"confirmed\",\n    key: \"confirmed\",\n  },\n  {\n    title: \"Origin\",\n    dataIndex: \"origin\",\n    key: \"origin\",\n  },\n  {\n    title: \"Patient Name\",\n    dataIndex: [\"patient\", \"name\"],\n    key: \"patient_name\",\n  },\n  {\n    title: \"Actions\",\n    key: 'actions',\n    render: (text: string, record: any) => (\n      <Link to={`/case/${record.case_no}`}>Details</Link>\n    )\n  }\n];\n\nexport const CasesList: React.FC = () => {\n  const [cases, setCases] = useState<Array<CaseType>>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\")\n\n  useEffect(() => {\n    const fetchCasesList = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\"https://group-q-hotzone.herokuapp.com/hotzone/cases.json\" , {\n          headers: {\n            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n          }\n        });\n        const casesList: Array<CaseType> = response.data;\n        setCases(casesList);\n        setLoading(false);\n        setError(\"\");\n      } catch(e) {\n        setCases([]);\n        setError(\"failed to fetch cases data\");\n        setLoading(false);\n      }\n    }\n\n    fetchCasesList();\n  }, [])\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    cases && (\n      <>\n        <Title level={2}>All cases</Title>\n          <Table\n            dataSource={cases}\n            columns={columns}\n          />\n      </>\n    )\n  );\n}","import React, { FC, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { \n  Layout, \n  Typography,\n  Breadcrumb,\n  Descriptions,\n  Space,\n  Spin,\n  Collapse,\n} from \"antd\";\n\nconst { Panel } = Collapse;\nconst { Content } = Layout;\nconst { Title } = Typography; \n\ninterface ParamType {\n  case_no: string\n}\n\ninterface VirusType {\n  disease: string;\n  max_infectious: number;\n  name: string;\n}\n\ninterface PatientType {\n  dob: string;\n  hkid: string;\n  name: string;\n}\n\ninterface VisitType {\n  case: string;\n  category: string;\n  date_from: string;\n  date_to: string;\n  location: LocationType;\n}\n\ninterface LocationType {\n  address: string;\n  id: number;\n  name: string;\n  x_coord: number;\n  y_coord: number;\n}\n\ninterface CaseType {\n  virus: VirusType;\n  case_no: number;\n  confirmed: Date;\n  origin: string;\n  patient: PatientType;\n  locations: Array<VisitType>;\n}\n\nexport const CaseDetails: React.FC = () => {\n  const { case_no } = useParams<ParamType>();\n  const [caseDetails, setCaseDetails] = useState<CaseType>({} as CaseType);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState(\"\");\n  \n  useEffect(() => {\n    const fetchCaseOne = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`https://group-q-hotzone.herokuapp.com/hotzone/case/${case_no}`, {  \n        headers: {\n          \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n        }});\n        const data: CaseType = response.data;\n        data.locations.sort((v1: VisitType, v2: VisitType) => {\n          return v1.date_from > v2.date_to ? 1 : -1\n        })\n        setCaseDetails(data);\n        setLoading(false);\n        setError(\"\");\n      } catch(e) {\n        setCaseDetails({} as CaseType);\n        setLoading(false);\n        setError(\"failed to fetch case data\");\n      }\n    }\n\n    fetchCaseOne();\n  }, [case_no]);\n\n  if (error && error !== \"\") {\n    return <p>{error}</p>\n  }\n\n  if (loading) {\n    return (\n      <Space size=\"middle\">\n        <Spin size=\"large\" />\n      </Space>\n    );\n  }\n\n  return (\n    caseDetails.confirmed && (\n      <Content style={{ textAlign: 'left' }}>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link to=\"/cases\">Cases</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>\n            {`Case number: #${case_no}`}\n          </Breadcrumb.Item>\n        </Breadcrumb>\n        <Title level={2}>{`Case details`}</Title>\n        <Descriptions title=\"Case details\">\n          <Descriptions.Item label=\"Infecting pathogen\">\n            {caseDetails.virus.name}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Confirmed date\">\n            {caseDetails.confirmed}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Origin\">\n            {caseDetails.origin === \"I\" ? \"Imported\" : \"Local\"}\n          </Descriptions.Item>\n        </Descriptions>\n        <Descriptions title=\"Patient\">\n          <Descriptions.Item label=\"HKID\">\n            {caseDetails.patient.hkid}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Name\">\n            {caseDetails.patient.name}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Date of birth\">\n            {caseDetails.patient.dob}\n          </Descriptions.Item>\n        </Descriptions>\n        <Title level={3}>Locations visited</Title>\n        <Collapse>\n          {caseDetails.locations.map((visit: VisitType, index) => (\n          <Panel \n            key={`${visit.location.name} ${visit.date_from}`} \n            header={`${visit.location.name} | From: ${visit.date_from} - To: ${visit.date_to}`}\n          >\n            <Descriptions>\n              <Descriptions.Item label=\"Location ID\">\n                {visit.location.id}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Address\">\n                {visit.location.address}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"X coordinates\">\n                {visit.location.x_coord}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Y coordinates\">\n                {visit.location.y_coord}\n              </Descriptions.Item>\n            </Descriptions>\n          </Panel>\n          ))}\n        </Collapse>\n      </Content>\n    )\n  );\n}","import React, { useState } from \"react\";\nimport { Form, Input, Button, message, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { Logo } from \"./Logo\";\nimport { Link } from \"react-router-dom\";\n\nconst { Link: LinkText } = Typography;\n\ninterface ILogin {\n  username: string;\n  password: string;\n}\n\nexport const LoginPage: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onFinish = async ({ username, password }: ILogin) => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\n        \"https://group-q-hotzone.herokuapp.com/login/\",\n        {\n          username,\n          password,\n        }\n      );\n      const token = response.data.token;\n      if (token) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"userLoggedIn\", username);\n      }\n      message.success(\"logged in successfully\");\n      //reroute to home page\n      document.location.href = \"/\";\n    } catch (e) {\n      message.error(\"failed to login\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Logo color=\"black\" />\n      <Form\n        style={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"50%\" }}\n        name=\"basic\"\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your password!\" }]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      <a href=\"https://group-q-hotzone.herokuapp.com/password-reset/\">\n        Forgot Password?\n      </a>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Typography, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\n\nconst { Title } = Typography;\n\nexport const Settings: React.FC = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div>\n      <Title>Change Password</Title>\n      <Input placeholder=\"new password\" type=\"password\" onChange={(e) => {\n        setNewPassword(e.target.value);\n      }} />\n      <Button style={{ marginTop: \"12px\" }} type=\"primary\" onClick={async () => {\n        try {\n          setLoading(true);\n          if (newPassword && newPassword.length > 3) {\n            await axios.put(\"https://group-q-hotzone.herokuapp.com/hotzone/change_password/\", {\n            new_password: newPassword\n            } , {\n              headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n              }\n            });\n            message.success(\"password changed successfully!\");\n            setNewPassword(\"\");\n          } else {\n            message.error(\"password is too short or blank!\");\n          }\n        } catch (e) {\n          message.error(\"failed to change password\");\n        }\n        setLoading(false);\n      }} loading={loading}>Change</Button>\n    </div>\n  )\n}","import React, { FC } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport {\n  HomePage,\n  AddLocation,\n  LocationList,\n  PatientTable,\n  CasesList,\n  LoginPage,\n  CaseDetails,\n  Settings,\n} from \"./components\";\n\nconst NavBarLayout = () => {\n  if (!localStorage.getItem(\"token\")) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <HomePage>\n      <Switch>\n        <Route exact path=\"/\">\n          <CasesList />\n        </Route>\n        <Route exact path=\"/locations\">\n          <LocationList />\n        </Route>\n        <Route path=\"/case/:case_no\">\n          <CaseDetails />\n        </Route>\n        <Route exact path=\"/patients\">\n          <PatientTable />\n        </Route>\n        <Route exact path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route exact path=\"/addlocation\">\n          <AddLocation />\n        </Route>\n      </Switch>\n    </HomePage>\n  );\n};\n\nconst LoginLayout = () => (\n  <div\n    style={{\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    }}\n  >\n    <LoginPage />\n  </div>\n);\n\nconst App: FC = () => (\n  <div className=\"App\" style={{ height: \"100vh\" }}>\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginLayout />\n        </Route>\n        <Route path=\"/\">\n          <NavBarLayout />\n        </Route>\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}